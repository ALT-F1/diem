(function() {var implementors = {};
implementors["backup_cli"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"backup_cli/storage/struct.ShellSafeName.html\" title=\"struct backup_cli::storage::ShellSafeName\">ShellSafeName</a>","synthetic":false,"types":["backup_cli::storage::ShellSafeName"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"backup_cli/storage/struct.TextLine.html\" title=\"struct backup_cli::storage::TextLine\">TextLine</a>","synthetic":false,"types":["backup_cli::storage::TextLine"]}];
implementors["functional_tests"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"enum\" href=\"functional_tests/checker/directives/enum.Directive.html\" title=\"enum functional_tests::checker::directives::Directive\">Directive</a>&gt; for <a class=\"enum\" href=\"functional_tests/checker/directives/enum.Directive.html\" title=\"enum functional_tests::checker::directives::Directive\">Directive</a>","synthetic":false,"types":["functional_tests::checker::directives::Directive"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"functional_tests/common/struct.Sp.html\" title=\"struct functional_tests::common::Sp\">Sp</a>&lt;T&gt;","synthetic":false,"types":["functional_tests::common::Sp"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"functional_tests/common/struct.LineSp.html\" title=\"struct functional_tests::common::LineSp\">LineSp</a>&lt;T&gt;","synthetic":false,"types":["functional_tests::common::LineSp"]}];
implementors["invalid_mutations"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Index&gt; for <a class=\"struct\" href=\"invalid_mutations/bounds/struct.CodeUnitBoundsMutation.html\" title=\"struct invalid_mutations::bounds::CodeUnitBoundsMutation\">CodeUnitBoundsMutation</a>","synthetic":false,"types":["invalid_mutations::bounds::code_unit::CodeUnitBoundsMutation"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Index&gt; for <a class=\"struct\" href=\"invalid_mutations/bounds/struct.OutOfBoundsMutation.html\" title=\"struct invalid_mutations::bounds::OutOfBoundsMutation\">OutOfBoundsMutation</a>","synthetic":false,"types":["invalid_mutations::bounds::OutOfBoundsMutation"]}];
implementors["libra_crypto"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 32]</a>&gt; for <a class=\"struct\" href=\"libra_crypto/hash/struct.HashValue.html\" title=\"struct libra_crypto::hash::HashValue\">HashValue</a>","synthetic":false,"types":["libra_crypto::hash::HashValue"]}];
implementors["libra_network_address"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"libra_network_address/struct.DnsName.html\" title=\"struct libra_network_address::DnsName\">DnsName</a>","synthetic":false,"types":["libra_network_address::DnsName"]}];
implementors["libra_proptest_helpers"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;Index&gt; for <a class=\"struct\" href=\"libra_proptest_helpers/struct.Index.html\" title=\"struct libra_proptest_helpers::Index\">Index</a>","synthetic":false,"types":["libra_proptest_helpers::Index"]}];
implementors["libra_swarm"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"enum\" href=\"libra_swarm/swarm/enum.LibraSwarmDir.html\" title=\"enum libra_swarm::swarm::LibraSwarmDir\">LibraSwarmDir</a>","synthetic":false,"types":["libra_swarm::swarm::LibraSwarmDir"]}];
implementors["libra_temppath"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"struct\" href=\"libra_temppath/struct.TempPath.html\" title=\"struct libra_temppath::TempPath\">TempPath</a>","synthetic":false,"types":["libra_temppath::TempPath"]}];
implementors["libra_types"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"libra_types/account_state_blob/struct.AccountStateBlob.html\" title=\"struct libra_types::account_state_blob::AccountStateBlob\">AccountStateBlob</a>","synthetic":false,"types":["libra_types::account_state_blob::AccountStateBlob"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"libra_types/transaction/authenticator/struct.AuthenticationKey.html\" title=\"struct libra_types::transaction::authenticator::AuthenticationKey\">AuthenticationKey</a>","synthetic":false,"types":["libra_types::transaction::authenticator::AuthenticationKey"]}];
implementors["move_core_types"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"move_core_types/account_address/struct.AccountAddress.html\" title=\"struct move_core_types::account_address::AccountAddress\">AccountAddress</a>","synthetic":false,"types":["move_core_types::account_address::AccountAddress"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"move_core_types/identifier/struct.IdentStr.html\" title=\"struct move_core_types::identifier::IdentStr\">IdentStr</a>&gt; for <a class=\"struct\" href=\"move_core_types/identifier/struct.Identifier.html\" title=\"struct move_core_types::identifier::Identifier\">Identifier</a>","synthetic":false,"types":["move_core_types::identifier::Identifier"]}];
implementors["move_lang"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"move_lang/shared/struct.Address.html\" title=\"struct move_lang::shared::Address\">Address</a>","synthetic":false,"types":["move_lang::shared::Address"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()